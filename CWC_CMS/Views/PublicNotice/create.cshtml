@model CWC_CMS.Models.PublicNoticeModel
@using SIDCUL.Models
@{
    ViewBag.Title = "create";
    Layout = "~/Views/Shared/_LayoutView_bak3.cshtml";
}


<style type="text/css">
    .drop {
        background-color: #fcfcfd;
        border-color: #bdc3d1;
        border-radius: 2px;
        height: 38px;
        outline: none;
    }
</style>

<script type="text/javascript">
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57)) {
            alert("Please Input Numeric Value");
            return false;
        }
        else {
            return true;
        }
    }

</script>



<script type="text/javascript">

    $(document).ready(function () {

        $('#basicForm').validate({
            highlight: function (element) {
                $(element).closest('.form-group').removeClass('has-success').addClass('has-error');
            },
            success: function (element) {
                $(element).closest('.form-group').removeClass('has-error');
            }
        });
        $('.select2').select2();
    });
</script>



@using (Html.BeginForm("Create", "PublicNotice", FormMethod.Post, new { id = "basicForm", @class = "form-horizontal", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()


    <div class="form-horizontal">
        @Html.ValidationSummary(true)
        <!-- panel -->
        <div class="panel panel-primary">
            <div class="panel-heading">
                <table style="width:100%; background-color:transparent">
                    <tr>
                        <td>

                            <h4 class="panel-title">Public Notices</h4>

                        </td>

                        <td style="text-align:right">
                            @Html.ActionLink("Back  ", "Index", "Home", new { }, new { @class = "btn btn-default btn-quirk" })
                        </td>
                    </tr>
                </table>

            </div>

        </div>



        <div class="container-fluid">
            <div class="panel panel-default">
                <ul class="panel-options">
                    <li><a class="panel-minimize panelMinimizeicon"><i class="fa fa-chevron-down"></i></a></li>
                </ul>


                <div class="panel-heading">
                    <h2 class="panel-title" style="text-align:center">Public Notices</h2>
                </div>

                <div class="panel-body">
                    <div id="repeaterNew">
                        <div class="form-horizontal">
                            <table id="detailsTable" class="table table-bordered table-striped table-responsive">
                                <tbody>
                                    <tr class="MainBody">
                                        <th class="bg-primary">Date</th>
                                        <th class="bg-primary">Description</th>
                                        <th class="bg-primary">English Document</th>
                                        <th class="bg-primary">Hindi Document</th>
                                        <th class="bg-primary">Action</th>
                                    </tr>
                                    @if (Model != null)
                                    {
                                        if (Model.PublicNoticeList != null)
                                        {
                                            for (int i = 0; i < Model.PublicNoticeList.Count; i++)
                                            {
                                                <tr class="MainBody">
                                                    <td>
                                                        @Html.TextBoxFor(modelItem => modelItem.PublicNoticeList[i].NoticeDate, "{0:dd MMM yyyy}", new { @class = "form-control datepicker", placeholder = "Type here...", readOnly = true })
                                                        @Html.ValidationMessageFor(modelItem => modelItem.PublicNoticeList[i].NoticeDate, "", new { @class = "text-danger" })
                                                        @Html.HiddenFor(modelItem => modelItem.PublicNoticeList[i].publicNotiecsId)
                                                    </td>
                                                    <td>
                                                        @Html.TextBoxFor(modelItem => modelItem.PublicNoticeList[i].Description, new { @class = "form-control", placeholder = "Type here...", readOnly = true })
                                                        @Html.ValidationMessageFor(modelItem => modelItem.PublicNoticeList[i].Description, "", new { @class = "text-danger" })

                                                    </td>
                                                    <td>
                                                        @Html.HiddenFor(modelItem => modelItem.PublicNoticeList[i].EnglishDocumentPath, new { required = false })
                                                        @*@Html.HiddenFor(modelItem => modelItem.WorkItemDocumentsList[i].BankId, new { required = false })*@
                                                        @if (Model.PublicNoticeList[i].EnglishDocumentPath != "NA")
                                                        {
                                                            @Html.ActionLink("View Document", "Document_View", "PublicNotice", new { FilePath = Model.PublicNoticeList[i].EnglishDocumentPath, noticeid = Model.PublicNoticeList[i].publicNotiecsId, filecheck = 0 }, new { @class = "text-primary ", target = "_blank", style = "width:100px;" })
                                                        }
                                                        else
                                                        {
                                                            <p class="text-danger">No Document</p>
                                                        }


                                                    </td>
                                                    <td>
                                                        @Html.HiddenFor(modelItem => modelItem.PublicNoticeList[i].HindiDocumentPath, new { required = false })
                                                        @if (Model.PublicNoticeList[i].HindiDocumentPath != "NA")
                                                        {
                                                            @Html.ActionLink("View Document", "Document_View", "PublicNotice", new { FilePath = Model.PublicNoticeList[i].HindiDocumentPath, noticeid = Model.PublicNoticeList[i].publicNotiecsId, filecheck = 1 }, new { @class = "text-primary ", target = "_blank", style = "width:100px;" })
                                                        }
                                                        else
                                                        {
                                                            <p class="text-danger">No Document</p>
                                                        }
                                                    </td>
                                                    <td style="width:70px;">
                                                        @Html.EncodedActionLink("Remove", "Delete", "PublicNotice", new { publicNoticeId = Model.PublicNoticeList[i].publicNotiecsId }, new { name = "deletepopup", @class = "actdelete", style = "color:#326661", data_original_title = "Delete Data", data_placement = "top", data_toggle = "tooltip" })
                                                        @*<a data-itemid="0" href="#" class="deleteItem">Remove</a>*@
                                                        <a data-itemplusid_partnar="1" href="#" class="Plus_Partnar " style="display:none"><i class="fa fa-plus"></i></a>
                                                    </td>
                                                </tr>

                                            }
                                        }
                                    }
                                </tbody>
                                <tbody id="ShowRow">

                                    <tr>
                                        <td>
                                            <input type="text" id="NoticeDatePublicNoticesRepeater" name="NoticeDatePublicNoticesRepeater" placeholder="Uploaded Date" class="form-control datepicker" autocomplete="off" />

                                        </td>
                                        <td><input type="text" id="DescriptionPublicNoticesRepeater" name="DescriptionPublicNoticesRepeater" placeholder="Document Description" class="form-control" autocomplete="off" /></td>
                                        <td>@Html.TextBoxFor(model => model.PublicNoticeList[0].EnglishDocument, new { id = "PublicNoticeEngDocumentRepeater", type = "file", @class = "form-control EnglishDocument checkExtension", @accept = "application/pdf", })</td>
                                        <td>@Html.TextBoxFor(model => model.PublicNoticeList[0].HindiDocument, new { id = "PublicNoticeHindiDocumentRepeater", type = "file", @class = "form-control HindiDocument checkExtension", @accept = "application/pdf", })</td>

                                        <td><a id="addToList" class="btn btn-primary" style="display:none">Save</a></td>
                                    </tr>
                                </tbody>
                            </table>
                            <input type="hidden" id="OrderId" />
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10 padding10">
                            @{
                                if (@ViewBag.IsNewForm == "Yes")
                                {
                                    <input type="submit" value="Save" id="btnSubmit" onclick="return Savefiles();" class="btn btn-success btn-quirk btn-wide mr5" />
                                }
                                else
                                {
                                    <input type="submit" value="Update" id="btnSubmit" onclick="return Savefiles();" class="btn btn-success btn-quirk btn-wide mr5" />
                                }
                            }



                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>



                                }




<link href="~/CssJs/jquery.datetimepicker.min.css" rel="stylesheet" />
@*<script src="~/CssJs/date.js"></script>*@
<script src="~/CssJs/jquery.datetimepicker.js"></script>



<script>
    $(function () {
        $('.datetimepicker').datetimepicker(
             {
                 format: 'd-M-Y H:i'
             });
    });
</script>

<script>
    function Savefiles() {
        debugger;

        count = $('.MainBody').length - 1;
        var NoticeDate = $("#NoticeDatePublicNoticesRepeater").val(),
            Description = $("#DescriptionPublicNoticesRepeater").val(),
            PublicNoticeEngDocumentRepeater = $("#PublicNoticeEngDocumentRepeater").clone(),
            PublicNoticeHindiDocumentRepeater = $("#PublicNoticeHindiDocumentRepeater").clone(),


        detailsTableBody = $(".MainBody:last");
        PublicNoticeEngDocumentRepeater.attr("id", "PublicNoticeEngDocumentRepeater").attr("class", "EnglishDocument").attr("name", "EnglishDocument").attr('readOnly', true);
        PublicNoticeHindiDocumentRepeater.attr("id", "PublicNoticeHindiDocumentRepeater").attr("class", "HindiDocument").attr("name", "HindiDocument").attr('readOnly', true);

        var productItem = '<tr class = "MainBody"><td>@Html.TextBoxFor(model => model.PublicNoticeList[0].NoticeDate, new { @class = "form-control NoticeDate", placeholder = "Type here...", readOnly = true })</td><td>@Html.TextBoxFor(model => model.PublicNoticeList[0].Description, new { @class = "form-control Description", placeholder = "Type here...", readOnly = true })</td></td></td><td><a data-itemId="0" href="#" class="deleteItem">Remove</a></td><td><a data-itemPlusId="1" href="#" class="Plus"><i class="fa fa-plus"></i></a></td></tr>';

        detailsTableBody.after(productItem);
        //$(".Description:last").parent('td').eq(0).after('<td></td>');
        //$(".Description:last").parent('td').next('td').eq(0).append(PublicNoticeEngDocumentRepeater);

        $(".Description:last").parent('td').eq(0).after(PublicNoticeEngDocumentRepeater);
        $(".deleteItem:last").parent('td').eq(0).before(PublicNoticeHindiDocumentRepeater);
        console.log(productItem);

        // $(".EnglishDocument:last").parent('td').eq(0).append('<td></td>');
        //$(".EnglishDocument").parent('td').eq(0).after(PublicNoticeHindiDocumentRepeater);


        $(".NoticeDate:last").val(NoticeDate);
        $(".Description:last").val(Description);

        console.log($(".NoticeDate:last").val());
        console.log($(".Description:last").val());
        $(".NoticeDate:last").attr('name', 'PublicNoticeList[' + count + '].NoticeDate');
        $(".EnglishDocument:last").attr('name', 'PublicNoticeList[' + count + '].EnglishDocument');
        $(".HindiDocument:last").attr('name', 'PublicNoticeList[' + count + '].HindiDocument');
        $(".Description:last").attr('name', 'PublicNoticeList[' + count + '].Description');
        count++;



        clearItem();
        //After insert one row hide the text box row
        $("#ShowRow").hide();
        return true;


    }
</script>
<script>
    //Add Multiple Public Notices start.
    var count = $('.MainBody').length - 1;
    $("#addToList").click(function (e) {
        debugger;
        e.preventDefault();
        //if ($.trim($("#NoticeDatePublicNoticesRepeater").val()) == ""  || $.trim($("#DescriptionPublicNoticesRepeater").val()) == "" ) return;   || $.trim($("#PublicNoticeEngDocumentRepeater").val()) == "" || $.trim($("#PublicNoticeHindiDocumentRepeater").val()) == ""
        count = $('.MainBody').length - 1;
        var NoticeDate = $("#NoticeDatePublicNoticesRepeater").val(),
            Description = $("#DescriptionPublicNoticesRepeater").val(),
            PublicNoticeEngDocumentRepeater = $("#PublicNoticeEngDocumentRepeater").clone(),
            PublicNoticeHindiDocumentRepeater = $("#PublicNoticeHindiDocumentRepeater").clone(),


        detailsTableBody = $(".MainBody:last");
        PublicNoticeEngDocumentRepeater.attr("id", "PublicNoticeEngDocumentRepeater").attr("class", "EnglishDocument").attr("name", "EnglishDocument").attr('readOnly', true);
        PublicNoticeHindiDocumentRepeater.attr("id", "PublicNoticeHindiDocumentRepeater").attr("class", "HindiDocument").attr("name", "HindiDocument").attr('readOnly', true);

        var productItem = '<tr class = "MainBody"><td>@Html.TextBoxFor(model => model.PublicNoticeList[0].NoticeDate, new { @class = "form-control NoticeDate", placeholder = "Type here...", readOnly = true })</td><td>@Html.TextBoxFor(model => model.PublicNoticeList[0].Description, new { @class = "form-control Description", placeholder = "Type here...", readOnly = true })</td></td></td><td><a data-itemId="0" href="#" class="deleteItem">Remove</a></td><td><a data-itemPlusId="1" href="#" class="Plus"><i class="fa fa-plus"></i></a></td></tr>';

        detailsTableBody.after(productItem);
        //$(".Description:last").parent('td').eq(0).after('<td></td>');
        //$(".Description:last").parent('td').next('td').eq(0).append(PublicNoticeEngDocumentRepeater);

        $(".Description:last").parent('td').eq(0).after(PublicNoticeEngDocumentRepeater);
        $(".deleteItem:last").parent('td').eq(0).before(PublicNoticeHindiDocumentRepeater);
        console.log(productItem);

        // $(".EnglishDocument:last").parent('td').eq(0).append('<td></td>');
        //$(".EnglishDocument").parent('td').eq(0).after(PublicNoticeHindiDocumentRepeater);


        $(".NoticeDate:last").val(NoticeDate);
        $(".Description:last").val(Description);

        console.log($(".NoticeDate:last").val());
        console.log($(".Description:last").val());
        $(".NoticeDate:last").attr('name', 'PublicNoticeList[' + count + '].NoticeDate');
        $(".EnglishDocument:last").attr('name', 'PublicNoticeList[' + count + '].EnglishDocument');
        $(".HindiDocument:last").attr('name', 'PublicNoticeList[' + count + '].HindiDocument');
        $(".Description:last").attr('name', 'PublicNoticeList[' + count + '].Description');
        count++;



        clearItem();
        //After insert one row hide the text box row
        $("#ShowRow").hide();
    });

    // click Plus signe to show the row

    $(document).on('click', 'a.Plus', function (e) {
        debugger;
        e.preventDefault();
        var $self = $(this);
        if ($(this).attr('data-itemPlusId') == "1") {
            $("#ShowRow").show();
            $(".Plus").hide();
        }
    });
    // reset the text
    $("#reset").click(function (e) {
        e.preventDefault();
        clearItem();
    });

    //After Add A New row In The List, Clear Clean The Form For Add More Order.
    function clearItem() {
        $("#NoticeDatePublicNoticesRepeater").val('');
        $("#DescriptionPublicNoticesRepeater").val('');
        $("#PublicNoticeEngDocumentRepeater").val('');
        $("#PublicNoticeHindiDocumentRepeater").val('');
    }
    // After Add A New row In The List, If You Want, You Can Remove It.
    $(document).on('click', 'a.deleteItem', function (e) {
        debugger;
        e.preventDefault();
        var rowCount = $("#detailsTable").find("tr").length;
        console.log(rowCount);
        if (rowCount == 3) {
            var $self = $(this);
            if ($(this).attr('data-itemId') == "0") {
                $(this).parents('tr').css("background-color", "#ff6347").fadeOut(200, function () {
                    $(this).remove();
                    $("#ShowRow").show();
                    $(".Plus").hide();
                });
            }
        }
        else {
            $(this).parents('tr').css("background-color", "#ff6347").fadeOut(200, function () {
                $(this).remove();
                $(".Plus").show();
            });
        }
    });
    //Add Multiple Public Notices start.
</script>



<script type="text/javascript">
    $(function () {
        $(".datepicker").datepicker({
            dateFormat: 'dd-M-yy',
            changeMonth: true,
            changeYear: true
        });

    });

</script>


<script type="text/javascript">

    var SystemDateTimeMinValue = '01-Jan-1753 00:00'
    console.log(SystemDateTimeMinValue);
    $(function () {
        $('.datetimepicker').each(function () {
            if ($(this).val() == SystemDateTimeMinValue) {
                $(this).val('');
            }
        });
    });
</script>
<script>
    var filecontrol;
    $('.checkExtension').on('change', function (e) {
        var flag = false;
        var result = $(this).val();
        var file = result;
        if (file != null) {
            var multi = file.split(".");
            if (multi.length > 2) {
                alert("Please upload proper file with single dot in filename");
                $(this).val('');
                return;
            }
            var extension = file.substr((file.lastIndexOf('.') + 1));
            switch (extension) {
                case 'pdf':
                    flag = true;
                    $('#error').empty();
                    break;
                case 'PDF':
                    flag = true;
                    $('#error').empty();
                    break;
                default:
                    alert("You can upload only pdf extension file Only")
                    $(this).val('');
                    flag = false;
            }


            if (flag == true) {

                var FileID = $(this).attr('id')
                var size = ValidateFileSize(FileID, $(this));
                if (size > 5) {
                    alert("You Can Upload file Size Up to 5 MB.");
                    $(this).val('');
                }
                else {
                    filecontrol = $(this);
                    var myformData = new FormData();
                    myformData.append('file', $(this)[0].files[0]);
                    $.ajax({
                        async: false,
                        type: "POST",
                        url: "../CWCCppTender/CheckFile",
                        contentType: false,
                        processData: false,
                        data: myformData,
                        success: function (response) {

                            showResult(response, filecontrol)

                        },
                        failure: function (response) {
                            //alert(response.d);
                            return false;
                        }
                    });
                    function showResult(response, filecontrol) {

                        if (response == false) {
                            alert("Please select vaild pdf file.");
                            filecontrol.val('');
                        }
                        else {
                            return true;
                        }
                    }

                }
            }
        }


    });

    function ValidateFileSize(fileid, file) {
        try {
            var fileSize = 0;
            if (navigator.userAgent.match(/msie/i)) {
                var obaxo = new ActiveXObject("Scripting.FileSystemObject");
                var filePath = file[0].value;
                var objFile = obaxo.getFile(filePath);
                var fileSize = objFile.size;
                fileSize = fileSize / 1048576;
            }
            else {
                fileSize = file[0].files[0].size
                fileSize = fileSize / 1048576;
            }

            return fileSize;
        }
        catch (e) {
            alert("Error is :" + e);
        }
    }

</script>

